<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mealme.mapper.ProductMapper">

    <!-- 전체 상품 조회, 상품별 별점 조회, 총 상품 갯수 조회 -->
    <select id="selectAll" resultType="productVo">
        SELECT P.PRODUCT_NUMBER, P.CATEGORY_CODE1, P.CATEGORY_CODE2, P.PRODUCT_NAME, P.PRODUCT_SELLER, P.PRODUCT_PRICE,
               P.PRODUCT_EXPLANATION, P.PRODUCT_INVENTORY, P.PRODUCT_REGISTER_DATE,
               AVG(ORV.REVIEW_GRADE) AS AVERAGE_RATING, COUNT(*) AS TOTAL_COUNT,
               PF.FILE_NAME, PF.FILE_UPLOAD_PATH, PF.FILE_UUID
        FROM TBL_PRODUCT P
                 LEFT JOIN TBL_ORDER O ON P.PRODUCT_NUMBER = O.PRODUCT_NUMBER
                 LEFT JOIN TBL_ORDER_REVIEW ORV ON P.PRODUCT_NUMBER = ORV.PRODUCT_NUMBER
                 LEFT JOIN TBL_PRODUCT_FILE PF ON P.PRODUCT_NUMBER = PF.PRODUCT_NUMBER
        GROUP BY P.PRODUCT_NUMBER, P.CATEGORY_CODE1, P.CATEGORY_CODE2, P.PRODUCT_NAME, P.PRODUCT_SELLER,
                 P.PRODUCT_PRICE, P.PRODUCT_EXPLANATION, P.PRODUCT_INVENTORY, P.PRODUCT_REGISTER_DATE,
                 PF.FILE_NAME, PF.FILE_UPLOAD_PATH, PF.FILE_UUID
    </select>


<!--    카테고리에 해당하는 리스트 조회-->
    <select id="foodCategory" resultType="productDto">
        SELECT p.PRODUCT_NUMBER, p.PRODUCT_NAME, p.PRODUCT_PRICE
        FROM TBL_PRODUCT p
                 INNER JOIN TBL_PRODUCT_CATEGORY c ON p.CATEGORY_CODE1 = c.CATEGORY_CODE1
        WHERE c.CATEGORY_NAME = #{categoryName}
    </select>


    <!-- 상품 전체 조회-->
    <select id="selectAllPrice" resultType="productVo">
        SELECT P.PRODUCT_NUMBER, P.CATEGORY_CODE1, P.CATEGORY_CODE2, P.PRODUCT_NAME, P.PRODUCT_SELLER, P.PRODUCT_PRICE, P.PRODUCT_EXPLANATION, AVG(ORV.REVIEW_GRADE) AS AVERAGE_RATING, COUNT(*) AS TOTAL_COUNT
        FROM TBL_PRODUCT P
                 LEFT JOIN TBL_ORDER_REVIEW ORV ON P.PRODUCT_NUMBER = ORV.PRODUCT_NUMBER
        GROUP BY P.PRODUCT_NUMBER, P.CATEGORY_CODE1, P.CATEGORY_CODE2, P.PRODUCT_NAME, P.PRODUCT_SELLER, P.PRODUCT_PRICE, P.PRODUCT_EXPLANATION
    </select>


<!--    상품 낮은 가격순으로 정렬 후 조회-->
    <select id="selectLowPrice" resultType="productVo">
        SELECT P.PRODUCT_NUMBER, P.CATEGORY_CODE1, P.CATEGORY_CODE2, P.PRODUCT_NAME, P.PRODUCT_SELLER, P.PRODUCT_PRICE, P.PRODUCT_EXPLANATION, AVG(ORV.REVIEW_GRADE) AS AVERAGE_RATING, COUNT(*) AS TOTAL_COUNT
        FROM TBL_PRODUCT P
                 LEFT JOIN TBL_ORDER_REVIEW ORV ON P.PRODUCT_NUMBER = ORV.PRODUCT_NUMBER
        GROUP BY P.PRODUCT_NUMBER, P.CATEGORY_CODE1, P.CATEGORY_CODE2, P.PRODUCT_NAME, P.PRODUCT_SELLER, P.PRODUCT_PRICE, P.PRODUCT_EXPLANATION
        ORDER BY P.PRODUCT_PRICE ASC
    </select>

    <!--    상품 리뷰 높은 순으로 정렬 후 조회-->
    <select id="selectReviewPrice" resultType="productVo">
        SELECT P.PRODUCT_NUMBER, P.CATEGORY_CODE1, P.CATEGORY_CODE2, P.PRODUCT_NAME, P.PRODUCT_SELLER, P.PRODUCT_PRICE, P.PRODUCT_EXPLANATION, P.PRODUCT_REGISTER_DATE, AVG(COALESCE(ORV.REVIEW_GRADE, 0)) AS AVERAGE_RATING, COUNT(*) AS TOTAL_COUNT
        FROM TBL_PRODUCT P
                 LEFT JOIN TBL_ORDER_REVIEW ORV
                           ON P.PRODUCT_NUMBER = ORV.PRODUCT_NUMBER
        GROUP BY P.PRODUCT_NUMBER, P.CATEGORY_CODE1, P.CATEGORY_CODE2, P.PRODUCT_NAME, P.PRODUCT_SELLER, P.PRODUCT_PRICE, P.PRODUCT_EXPLANATION, P.PRODUCT_REGISTER_DATE
        ORDER BY AVERAGE_RATING DESC
    </select>

    <select id="selectOne" resultType="productVo">
        SELECT PRODUCT_NUMBER, CATEGORY_CODE1, CATEGORY_CODE2, PRODUCT_NAME, PRODUCT_SELLER, PRODUCT_PRICE, PRODUCT_EXPLANATION
        FROM TBL_PRODUCT
        WHERE PRODUCT_NUMBER = {productNumber}
    </select>














</mapper>